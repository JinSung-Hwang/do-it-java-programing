package ch06;

// 부동 소수점 방식
// 1. 실수는 정수 보다 정밀하기 때문에 정수와는 다른 방식으로 표현해야 함
// 부동 소수점 방식으로 실수 값 0.1 표현
// 1.0 * 10 ^ - 1  == 가수 * 밑수 ^ 지수

// 부동 소수점은 지수와 가수로 표현함
// 컴퓨터에서는 밑수를 2로 사용함
// 정규화: 가수가 밑수보다 작은 한자리까지 가수로 표현되는 것
// 컴퓨터에서는 밑수가 2이므로 정규화를 하게 되면 가수부분의 첫번째 자리 숫자는 항상 1임
// 예) 0.2표현 0.4 * 2 ^ -1를 정규화하면 1.6 * 2 ^ -3

// float형과 double형

// 1. float형은 아래와 같이 구성된다.
// 부호지수(1비트) + 지수(8비트) + 가수(23비트)

// 2. double형은 아래와 같이 구성된다.
// 부호지수(1비트) + 지수(11비트) + 가수(52비트)

public class DoubleTest {
  public static void main(String[] agrs) {
    double dnum = 3.14;
    float fnum = 3.14F; // f첩자를 붙여줘야한다.
    // 자바는 기본적으로 소수는 8바이트인 double형식을 사용한다. 그런데 float에 넣을려고하면 8바이트를 4바이트로 바꿔야하니 F첩자를 붙이는것이다.

    System.out.println(dnum);
    System.out.println(fnum);

    double mynum = 1;
    for(int i=0; i < 10000; i++) {
      mynum = mynum + 0.1;
    }

    System.out.println(mynum); // 부동 소수점 오류가 발생한다. // 1001이 나와하지만 1001.000000000159값이 나온다.
    // 부동소수점오류가 있더라도 프로그래밍 언어에서는 이런 방식을 채택하여 소수를 사용한다.
  }
}
